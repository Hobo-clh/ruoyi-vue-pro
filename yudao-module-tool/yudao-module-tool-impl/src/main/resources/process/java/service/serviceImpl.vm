package ${basePackage}.module.${table.moduleName}.service.${table.businessName};

import org.springframework.stereotype.Service;
import javax.annotation.Resource;
import org.springframework.validation.annotation.Validated;

import java.util.*;
import ${basePackage}.module.bpm.api.task.dto.BpmProcessInstanceCreateReqDTO;
import ${basePackage}.module.bpm.api.task.BpmProcessInstanceApi;
import ${basePackage}.module.${table.moduleName}.controller.${sceneEnum.basePackage}.${table.businessName}.vo.*;
import ${basePackage}.module.${table.moduleName}.dal.dataobject.${table.businessName}.${table.className}DO;
import ${PageResultClassName};

import ${basePackage}.module.${table.moduleName}.convert.${table.businessName}.${table.className}Convert;
import ${basePackage}.module.${table.moduleName}.dal.mysql.${table.businessName}.${table.className}Mapper;

import static ${ServiceExceptionUtilClassName}.exception;
import cn.iocoder.yudao.framework.common.exception.ErrorCode;
// hobo todo 先写死
import cn.iocoder.yudao.module.process.service.ProcessCommonService;

/**
 * ${table.classComment} Service 实现类
 *
 * @author ${table.author}
 */
@Service
@Validated
public class ${table.className}ServiceImpl implements ${table.className}Service {

    /**
    * OA 请假对应的流程定义 KEY
    */
    public static final String PROCESS_KEY = "${processKey}";

    @Resource
    private ${table.className}Mapper ${classNameVar}Mapper;

    @Resource
    private BpmProcessInstanceApi processInstanceApi;

    @Resource
    private ProcessCommonService processCommonService;

    @Override
    public ${primaryColumn.javaType} create${simpleClassName}(Long userId, ${sceneEnum.prefixClass}${table.className}CreateReqVO createReqVO) {
        // 插入
        ${table.className}DO ${classNameVar} = ${table.className}Convert.INSTANCE.convert(createReqVO);
        ${classNameVar}Mapper.insert(${classNameVar});
        // 返回
        String processInstanceId = processInstanceApi.createProcessInstance(userId,
                new BpmProcessInstanceCreateReqDTO().setProcessDefinitionKey(PROCESS_KEY)
                    .setBusinessKey(String.valueOf(${classNameVar}.getId())));

        processCommonService.createProcessRelation(${classNameVar}.getId(), processInstanceId, ${table.className}DO.class);
        return ${classNameVar}.getId();
    }

    @Override
    public void update${simpleClassName}Result(${primaryColumn.javaType} id, Integer result) {
        // 校验存在
        this.validate${simpleClassName}Exists(id);
        // 更新
        processCommonService.updateResult(id, result, ${table.className}DO.class);

    }

    private void validate${simpleClassName}Exists(${primaryColumn.javaType} id) {
        if (${classNameVar}Mapper.selectById(id) == null) {
            throw exception(new ErrorCode(-1,"${table.classComment}不存在"));
        }
    }

    @Override
    public ${table.className}DO get${simpleClassName}(${primaryColumn.javaType} id) {
        return ${classNameVar}Mapper.selectById(id);
    }

    @Override
    public PageResult<ProcessCommonVo<${table.className}DO>> get${simpleClassName}Page(${sceneEnum.prefixClass}${table.className}PageReqVO pageReqVO) {
        return processCommonService.getProcessCommentPage(${classNameVar}Mapper.selectPage(pageReqVO));
    }

}
